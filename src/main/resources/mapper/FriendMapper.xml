<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.FriendMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Friend">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="friend_masterID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="friend_friendID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="friend_reName" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, friend_masterID, friend_friendID, friend_reName
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.FriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_friend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_friend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Friend">
    insert into tb_friend (id, friend_masterID, friend_friendID, 
      friend_reName)
    values (#{id,jdbcType=INTEGER}, #{friendMasterid,jdbcType=INTEGER}, #{friendFriendid,jdbcType=INTEGER}, 
      #{friendRename,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Friend">
    insert into tb_friend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="friendMasterid != null">
        friend_masterID,
      </if>
      <if test="friendFriendid != null">
        friend_friendID,
      </if>
      <if test="friendRename != null">
        friend_reName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="friendMasterid != null">
        #{friendMasterid,jdbcType=INTEGER},
      </if>
      <if test="friendFriendid != null">
        #{friendFriendid,jdbcType=INTEGER},
      </if>
      <if test="friendRename != null">
        #{friendRename,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.FriendExample" resultType="java.lang.Long">
    select count(*) from tb_friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Friend">
    update tb_friend
    <set>
      <if test="friendMasterid != null">
        friend_masterID = #{friendMasterid,jdbcType=INTEGER},
      </if>
      <if test="friendFriendid != null">
        friend_friendID = #{friendFriendid,jdbcType=INTEGER},
      </if>
      <if test="friendRename != null">
        friend_reName = #{friendRename,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Friend">
    update tb_friend
    set friend_masterID = #{friendMasterid,jdbcType=INTEGER},
      friend_friendID = #{friendFriendid,jdbcType=INTEGER},
      friend_reName = #{friendRename,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>