<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Article">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_typeID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="article_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_from" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_masterID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.entity.Article">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_typeID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="article_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_from" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_masterID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="article_content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, article_typeID, article_title, article_count, article_from, article_masterID, 
    article_date
  </sql>
  <sql id="Blob_Column_List">
    article_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.demo.entity.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.demo.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Article">
    insert into tb_article (id, article_typeID, article_title, 
      article_count, article_from, article_masterID, 
      article_date, article_content)
    values (#{id,jdbcType=INTEGER}, #{articleTypeid,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleCount,jdbcType=INTEGER}, #{articleFrom,jdbcType=INTEGER}, #{articleMasterid,jdbcType=INTEGER}, 
      #{articleDate,jdbcType=TIMESTAMP}, #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Article">
    insert into tb_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleTypeid != null">
        article_typeID,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="articleCount != null">
        article_count,
      </if>
      <if test="articleFrom != null">
        article_from,
      </if>
      <if test="articleMasterid != null">
        article_masterID,
      </if>
      <if test="articleDate != null">
        article_date,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleTypeid != null">
        #{articleTypeid,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleCount != null">
        #{articleCount,jdbcType=INTEGER},
      </if>
      <if test="articleFrom != null">
        #{articleFrom,jdbcType=INTEGER},
      </if>
      <if test="articleMasterid != null">
        #{articleMasterid,jdbcType=INTEGER},
      </if>
      <if test="articleDate != null">
        #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from tb_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Article">
    update tb_article
    <set>
      <if test="articleTypeid != null">
        article_typeID = #{articleTypeid,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleCount != null">
        article_count = #{articleCount,jdbcType=INTEGER},
      </if>
      <if test="articleFrom != null">
        article_from = #{articleFrom,jdbcType=INTEGER},
      </if>
      <if test="articleMasterid != null">
        article_masterID = #{articleMasterid,jdbcType=INTEGER},
      </if>
      <if test="articleDate != null">
        article_date = #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.entity.Article">
    update tb_article
    set article_typeID = #{articleTypeid,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_count = #{articleCount,jdbcType=INTEGER},
      article_from = #{articleFrom,jdbcType=INTEGER},
      article_masterID = #{articleMasterid,jdbcType=INTEGER},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Article">
    update tb_article
    set article_typeID = #{articleTypeid,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_count = #{articleCount,jdbcType=INTEGER},
      article_from = #{articleFrom,jdbcType=INTEGER},
      article_masterID = #{articleMasterid,jdbcType=INTEGER},
      article_date = #{articleDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>